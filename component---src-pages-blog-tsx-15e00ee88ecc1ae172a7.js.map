{"version":3,"sources":["webpack:///./src/components/Blog/PostCard/PostCard.tsx","webpack:///./src/components/Blog/Blog.tsx","webpack:///./src/pages/blog.tsx","webpack:///./src/components/Layout/Author/Author.tsx"],"names":["Root","styled","section","rhythm","Title","h3","ContentInfo","span","Content","p","PostCard","title","slug","description","date","timeToRead","location","aria-label","to","state","prevPath","pathname","dangerouslySetInnerHTML","__html","Blog","posts","useStaticQuery","allMarkdownRemark","edges","Author","map","node","frontmatter","fields","key","excerpt","BlogIndex","siteTitle","useSiteMetadata","comingBack","Boolean","match","transitions","usePageTransitions","translateX","Layout","props","div","style","StyledImage","Image","device","tablet","author","avatar","useAvatar","width","height","avatarFixedImage","childImageSharp","fixed","src","srcSet","alt","name","href","social","linkedin"],"mappings":"0LA6CMA,EAAOC,IAAOC,QAAV,oEAAGD,CAAH,0CACSE,YAAO,IAOpBC,EAAQH,IAAOI,GAAV,qEAAGJ,CAAH,oBACCE,YAAO,IAGbG,EAAcL,IAAOM,KAAV,2EAAGN,CAAH,qCAEFE,YAAO,KAGhBK,EAAUP,IAAOQ,EAAV,uEAAGR,CAAH,kBACDE,YAAO,EAAI,IAGRO,EAlD0C,SAAC,GAAD,IACvDC,EADuD,EACvDA,MACAC,EAFuD,EAEvDA,KACAC,EAHuD,EAGvDA,YACAC,EAJuD,EAIvDA,KACAC,EALuD,EAKvDA,WACAC,EANuD,EAMvDA,SANuD,OAQvD,kBAAChB,EAAD,KACE,kBAACI,EAAD,KACE,kBAAC,OAAD,CACEa,aAAA,qBAAiCN,EACjCO,GAAE,QAAUN,EACZO,MAAO,CAAEC,SAAUJ,EAASK,WAE3BV,IAGL,kBAACL,EAAD,KACGQ,EADH,MACYC,EADZ,aAGA,kBAACP,EAAD,CACEc,wBAAyB,CACvBC,OAAQV,O,YC6BVb,EAAOC,IAAOC,QAAV,6DAAGD,CAAH,kEAIKE,YAAO,KAGPqB,EA7DkC,SAAC,GAExB,IADxBR,EACwB,EADxBA,SA4BMS,EAxBFC,yBAAe,aAwBAC,kBAAkBC,MAErC,OACE,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,MACCJ,EAAMK,KACL,YAAkC,IAA/BC,EAA+B,EAA/BA,KACKpB,EAAQoB,EAAKC,YAAYrB,OAASoB,EAAKE,OAAOrB,KACpD,OACE,kBAAC,EAAD,CACEsB,IAAKH,EAAKE,OAAOrB,KACjBD,MAAOA,EACPC,KAAMmB,EAAKE,OAAOrB,KAClBC,YAAakB,EAAKC,YAAYnB,aAAekB,EAAKI,QAClDrB,KAAMiB,EAAKC,YAAYlB,KACvBC,WAAYgB,EAAKhB,WACjBC,SAAUA,S,wBCnBToB,UA3B4C,SAAC,GAElC,IADxBpB,EACwB,EADxBA,SAEeqB,EAAcC,cAArB3B,MAEF4B,KACJvB,EAASG,QAASH,EAASG,MAAMC,WAC7BoB,QAAQxB,EAASG,MAAMC,SAASqB,MAAM,cAGtCC,EAAcC,YAAmB,CACrCC,WAAYL,GAAc,IAAM,IAChCvB,aAGF,OACE,kBAAC6B,EAAA,EAAD,CAAQ7B,SAAUA,EAAUL,MAAO0B,GACjC,kBAAC,IAAD,CAAK1B,MAAM,SACV+B,EAAYZ,KAAI,gBAAGgB,EAAH,EAAGA,MAAOZ,EAAV,EAAUA,IAAV,OACf,kBAAC,IAASa,IAAV,CAAcb,IAAKA,EAAKc,MAAOF,GAC7B,kBAAC,EAAD,CAAM9B,SAAUA,W,gLCMpBhB,EAAOC,IAAOC,QAAV,mEAAGD,CAAH,iIAGIE,YAAO,GAEFA,YAAO,IAQpB8C,EAAchD,YAAOiD,KAAV,0EAAGjD,CAAH,kIAONkD,IAAOC,QAMHvB,EAxDA,WAA0B,IAC/BwB,EAAWf,cAAXe,OACFC,EAASC,YAAU,CAAEC,MAAO,GAAIC,OAAQ,KAExCC,EAAgC,OAAH,UAC9BJ,EAAOK,gBAAgBC,MADO,CAGjCC,IAAKP,EAAOK,gBAAgBC,MAAMC,IAClCC,OAAQR,EAAOK,gBAAgBC,MAAME,OACrCN,MAAO,GACPC,OAAQ,KAGV,OACE,kBAACzD,EAAD,KACE,kBAACiD,EAAD,CAAaW,MAAOF,EAAkBK,IAAKV,EAAOW,OAClD,iDACqB,IACnB,uBAAGC,KAAI,+BAAiCZ,EAAOa,OAAOC,UACnDd,EAAOW,MACL,IAJP,uEAKuE,IACrE,4BACE,kBAAC,OAAD,CAAM9C,GAAG,WAAT,yBADF","file":"component---src-pages-blog-tsx-15e00ee88ecc1ae172a7.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport { GatsbyLocation } from \"local-types\";\n\nimport { rhythm } from \"../../../utils/typography\";\n\ninterface PostCardProps {\n  title: string;\n  slug: string;\n  description: string;\n  date: string;\n  timeToRead: number;\n  location: GatsbyLocation;\n}\n\nconst PostCard: React.FunctionComponent<PostCardProps> = ({\n  title,\n  slug,\n  description,\n  date,\n  timeToRead,\n  location,\n}): React.ReactElement => (\n  <Root>\n    <Title>\n      <Link\n        aria-label={`Continue reading: ${title}`}\n        to={`/blog${slug}`}\n        state={{ prevPath: location.pathname }}\n      >\n        {title}\n      </Link>\n    </Title>\n    <ContentInfo>\n      {date} Â· {timeToRead} min read\n    </ContentInfo>\n    <Content\n      dangerouslySetInnerHTML={{\n        __html: description,\n      }}\n    />\n  </Root>\n);\n\nconst Root = styled.section`\n  margin-bottom: ${rhythm(1)};\n\n  a {\n    box-shadow: none;\n  }\n`;\n\nconst Title = styled.h3`\n  margin: ${rhythm(1)} 0 0;\n`;\n\nconst ContentInfo = styled.span`\n  font-style: italic;\n  font-size: ${rhythm(0.6)};\n`;\n\nconst Content = styled.p`\n  margin: ${rhythm(2 / 6)} 0;\n`;\n\nexport default PostCard;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { GatsbyLocation } from \"local-types\";\nimport { MarkdownRemarkConnection } from \"graphql-types\";\n\nimport PostCard from \"./PostCard\";\nimport Author from \"../Layout/Author\";\nimport { rhythm } from \"../../utils/typography\";\n\ninterface BlogProps {\n  location: GatsbyLocation;\n}\n\nconst Blog: React.FunctionComponent<BlogProps> = ({\n  location,\n}): React.ReactElement => {\n  const data: {\n    allMarkdownRemark: MarkdownRemarkConnection;\n  } = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        filter: { frontmatter: { draft: { eq: false } } }\n        sort: { fields: [frontmatter___date], order: DESC }\n      ) {\n        edges {\n          node {\n            excerpt\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"MMMM DD, YYYY\")\n              title\n              description\n            }\n            timeToRead\n          }\n        }\n      }\n    }\n  `);\n\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Root>\n      <Author />\n      {posts.map(\n        ({ node }): React.ReactElement => {\n          const title = node.frontmatter.title || node.fields.slug;\n          return (\n            <PostCard\n              key={node.fields.slug}\n              title={title}\n              slug={node.fields.slug}\n              description={node.frontmatter.description || node.excerpt}\n              date={node.frontmatter.date}\n              timeToRead={node.timeToRead}\n              location={location}\n            />\n          );\n        }\n      )}\n    </Root>\n  );\n};\n\nconst Root = styled.section`\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  max-width: ${rhythm(24)};\n`;\n\nexport default Blog;\n","import React from \"react\";\nimport { animated } from \"react-spring\";\nimport { GatsbyLocation } from \"local-types\";\n\nimport Layout from \"../components/Layout\";\nimport Blog from \"../components/Blog\";\nimport SEO from \"../components/Seo\";\nimport { useSiteMetadata, usePageTransitions } from \"../hooks\";\n\ninterface BlogIndexProps {\n  location: GatsbyLocation;\n}\n\nconst BlogIndex: React.FunctionComponent<BlogIndexProps> = ({\n  location,\n}): React.ReactElement => {\n  const { title: siteTitle } = useSiteMetadata();\n\n  const comingBack =\n    location.state && location.state.prevPath\n      ? Boolean(location.state.prevPath.match(/\\/blog\\/*/))\n      : false;\n\n  const transitions = usePageTransitions({\n    translateX: comingBack ? -100 : 100,\n    location,\n  });\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Blog\" />\n      {transitions.map(({ props, key }) => (\n        <animated.div key={key} style={props}>\n          <Blog location={location} />\n        </animated.div>\n      ))}\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Image, { FixedObject } from \"gatsby-image\";\nimport { Link } from \"gatsby\";\n\nimport { rhythm } from \"../../../utils/typography\";\nimport { device } from \"../../../styles/constants\";\nimport { useSiteMetadata, useAvatar } from \"../../../hooks\";\n\nconst Author = (): React.ReactElement => {\n  const { author } = useSiteMetadata();\n  const avatar = useAvatar({ width: 50, height: 50 });\n\n  const avatarFixedImage: FixedObject = {\n    ...avatar.childImageSharp.fixed,\n    // need to set src and srcSet explicitly, otherwise there is a type conflict\n    src: avatar.childImageSharp.fixed.src,\n    srcSet: avatar.childImageSharp.fixed.srcSet,\n    width: 50,\n    height: 50,\n  };\n\n  return (\n    <Root>\n      <StyledImage fixed={avatarFixedImage} alt={author.name} />\n      <h5>\n        A personal blog by{\" \"}\n        <a href={`https://www.linkedin.com/in/${author.social.linkedin}`}>\n          {author.name}\n        </a>{\" \"}\n        about coding, traveling, habit building, and much more (Psst... I am{\" \"}\n        <em>\n          <Link to=\"/resume\">open to opportunities</Link>.)\n        </em>\n      </h5>\n    </Root>\n  );\n};\n\nconst Root = styled.section`\n  display: grid;\n  grid-template-columns: 50px auto;\n  grid-gap: ${rhythm(1)};\n  align-items: center;\n  margin-bottom: ${rhythm(1)};\n\n  h5 {\n    margin: 0;\n    line-height: 1.5;\n  }\n`;\n\nconst StyledImage = styled(Image)`\n  margin-bottom: 0;\n  justify-self: center;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n\n  @media ${device.tablet} {\n    grid-row: auto;\n    justify-self: flex-end;\n  }\n`;\n\nexport default Author;\n"],"sourceRoot":""}